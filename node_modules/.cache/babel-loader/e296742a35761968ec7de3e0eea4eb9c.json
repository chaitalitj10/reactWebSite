{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjcha\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\nimport Filter from \"./Filter\";\nimport \"./Filter.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filterYear, setYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setYear(selectedYear);\n  };\n\n  const filterExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filterYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 24\n  }, this);\n\n  if (filterExpenses.length > 0) {\n    expensesContent = filterExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        selected: filterYear,\n        onFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"0xO5oXgLjWegRy1yFhJ2kRg3adk=\");\n\n_c = Expenses;\n;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/tjcha/Downloads/01-starting-setup/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","Filter","React","useState","Expenses","props","filterYear","setYear","filterChangeHandler","selectedYear","filterExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,OAAb,IAAwBJ,QAAQ,CAAC,MAAD,CAAtC;;AAEA,QAAMK,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,OAAO,CAACE,YAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAG;AAClD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,UAAjD;AACD,GAFsB,CAAvB;;AAIA,MAAIW,eAAe,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAEA,MAAGP,cAAc,CAACQ,MAAf,GAAwB,CAA3B,EAA6B;AAC3BD,IAAAA,eAAe,GAAGP,cAAc,CAACS,GAAf,CAAoBN,OAAD,iBACnC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHlB;AAIE,MAAA,IAAI,EAAER,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACS,EADf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEhB,UAAlB;AACA,QAAA,QAAQ,EAAEE;AADV;AAAA;AAAA;AAAA;AAAA,cADF,EAIGS,eAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlCQb,Q;;KAAAA,Q;AAkCR;AAED,eAAeA,QAAf","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport Filter from \"./Filter\";\r\nimport \"./Filter.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Expenses(props) {\r\n  const [filterYear, setYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setYear(selectedYear);\r\n  };\r\n\r\n  const filterExpenses = props.items.filter(expense =>{\r\n    return expense.date.getFullYear().toString() === filterYear;\r\n  });\r\n\r\n  let expensesContent =<p>No expenses found.</p>;\r\n  \r\n  if(filterExpenses.length > 0){\r\n    expensesContent = filterExpenses.map((expense) =>(\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <Filter selected={filterYear} \r\n        onFilter={filterChangeHandler} \r\n        /> \r\n        {expensesContent}       \r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}